{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Root object for the JSON data structure",
  "properties": {
    "metadata": {
      "type": "object",
      "description": "Metadata about the asset.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the asset."
        },
        "description": {
          "type": "string",
          "description": "Short description of the asset in 2 - 3 sentences."
        },
        "uuid": {
          "type": "string",
          "description": "Universally unique identifier for the asset.",
          "pattern": "^[a-f0-9]{32}$"
        },
        "asset_version": {
          "type": "string",
          "description": "Version of the asset.",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "openmaterial_version": {
          "type": "string",
          "description": "Version of OpenMATERIAL.",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "copyright": {
          "type": "string",
          "description": "Copyright information with year and company."
        },
        "license": {
          "type": "string",
          "description": "License information. For common open source licenses, provide an SPDX identifier. For other types of licenses, provide an URL to a webpage with the license or the filename of a separately provided license file."
        },
        "author": {
          "type": "string",
          "description": "Name or email address of the author of this asset. In case of multiple authors, use comma-separation. The author can also be a company name."
        },
        "model_creation_tool": {
          "type": "string",
          "description": "The tool or software used to generate the 3D model of this asset."
        },
        "creation_date": {
          "type": "string",
          "description": "Creation date of the asset in the format YYYYMMDDTHHMMSSZ.",
          "pattern": "^\\d{8}T\\d{6}Z$"
        },
        "modeling_method": {
          "type": "string",
          "description": "Description how the 3D model was modeled. Was it modeled based on a 3D scan, based on photos, or freehand?"
        },
        "validation_description": {
          "type": "string",
          "description": "Was the geometry of the 3D model validated against a real-world object? If yes, how?"
        },
        "asset_type": {
          "type": "string",
          "description": "Type of the asset out of the following: object (individual object), scene (a collection of multiple objects)",
          "enum": ["object", "scene"]
        },
        "number_of_objects": {
          "type": "integer",
          "description": "The number of individual objects in a scene. This only applies if 'asset_type' == 'scene'."
        },
        "object_class": {
          "type": "string",
          "description": "The class of the object. This only applies if 'asset_type' == 'object'.",
          "enum": ["vehicle", "human", "road_network", "other"]
        }
      },
      "required": [
        "name",
        "description",
        "uuid",
        "asset_version",
        "openmaterial_version",
        "copyright"
      ]
    },
    "material_mapping": {
      "type": "array",
      "description": "Mapping of materials used in the asset",
      "items": {
        "type": "array",
        "description": "Array of RGB values and material name",
        "items": [
          {
            "type": "string",
            "description": "RGB values in the format 'R;G;B;A'",
            "pattern": "^\\d{1,3};\\d{1,3};\\d{1,3};\\d{1,3}$"
          },
          {
            "type": "string",
            "description": "Path to an OpenMATERIAL property file"
          },
          {
            "type": "string",
            "description": "Short but precise description of the material"
          }
        ],
        "minItems": 3,
        "maxItems": 3
      }
    }
  },
  "required": [
    "metadata",
    "material_mapping"
  ]
}
